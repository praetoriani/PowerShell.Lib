# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

# =============================================================================
# GITHUB ACTIONS WORKFLOW F√úR CONTEXT MENU SWITCHER RELEASES
# =============================================================================
# Diese Datei definiert einen automatisierten Workflow, der ausgef√ºhrt wird,
# wenn ein Tag erstellt wird, das mit "cms-" beginnt (z.B. cms-v1.0.1)

name: Context Menu Switcher Release

# TRIGGER-KONFIGURATION
# Definiert, wann dieser Workflow ausgef√ºhrt werden soll
on:
  push:
    tags:
      - 'cms-*'  # Workflow startet nur bei Tags die mit "cms-" beginnen
                 # Beispiele: cms-v1.0.1, cms-v2.0.0, cms-beta-1

# BERECHTIGUNGEN
# GitHub Actions ben√∂tigt explizite Berechtigung zum Erstellen von Releases
permissions:
  contents: write    # Erlaubt das Erstellen und Bearbeiten von Repository-Inhalten

# JOB-DEFINITION
# Ein Workflow kann mehrere Jobs enthalten, hier haben wir nur einen
jobs:
  release:
    runs-on: ubuntu-latest    # Der Workflow l√§uft auf einem Ubuntu Linux Server
    
    # ZUS√ÑTZLICHE SICHERHEITSPR√úFUNG
    # Doppelt sicherstellen, dass nur cms-Tags diesen Workflow triggern
    if: startsWith(github.ref, 'refs/tags/cms-')
    
    # SCHRITTE DES WORKFLOWS
    # Jeder Step wird sequenziell ausgef√ºhrt
    steps:
      # SCHRITT 1: Repository-Code herunterladen
      # GitHub Actions l√§uft auf einem frischen Server und ben√∂tigt Zugriff auf Ihren Code
      - name: Repository auschecken
        uses: actions/checkout@v4    # Offizieller GitHub Action zum Code-Download
        # Nach diesem Schritt sind alle Ihre Repository-Dateien verf√ºgbar

      # SCHRITT 2: Release-Paket erstellen
      # Hier wird nur der Context Menu Switcher Ordner in ein ZIP-Paket gepackt
      - name: Context Menu Switcher Release-Paket erstellen
        run: |
          # Ausgabe f√ºr Debugging - wird im Actions-Log angezeigt
          echo "üöÄ Starte Release-Paket Erstellung f√ºr Context Menu Switcher"
          
          # Tempor√§ren Ordner f√ºr das Release erstellen
          mkdir -p release-temp/Context-Menu-Switcher
          echo "üìÅ Tempor√§rer Release-Ordner erstellt"
          
          # WICHTIG: Alle Dateien aus dem Context Menu Switcher Ordner kopieren
          # Der Ordnername hat Leerzeichen, daher Anf√ºhrungszeichen n√∂tig
          cp -r "Context Menu Switcher"/* release-temp/Context-Menu-Switcher/
          echo "üìã Context Menu Switcher Dateien kopiert:"
          ls -la "Context Menu Switcher"/
          
          # In den tempor√§ren Ordner wechseln
          cd release-temp
          
          # ZIP-Datei erstellen mit allen Context Menu Switcher Dateien
          # -r = rekursiv (alle Unterordner einbeziehen)
          zip -r ../context-menu-switcher-release.zip Context-Menu-Switcher/
          
          # Zur√ºck zum Root-Verzeichnis
          cd ..
          
          # Best√§tigung und Gr√∂√üe der ZIP-Datei anzeigen
          echo "‚úÖ ZIP-Datei erstellt:"
          ls -lh context-menu-switcher-release.zip

      # SCHRITT 3: GitHub Release erstellen
      # Dies ist der wichtigste Schritt - hier wird das tats√§chliche Release erstellt
      - name: GitHub Release mit Assets erstellen
        uses: softprops/action-gh-release@v1    # Bew√§hrte Third-Party Action f√ºr Releases
        with:
          # RELEASE-TITEL
          # Verwendet den Tag-Namen (z.B. "Context Menu Switcher cms-v1.0.1")
          name: Context Menu Switcher ${{ github.ref_name }}
          
          # RELEASE-BESCHREIBUNG (Markdown-Format unterst√ºtzt)
          body: |
            # üéØ Context Menu Switcher Release ${{ github.ref_name }}
            
            Dieses Release enth√§lt **ausschlie√ülich** die Dateien f√ºr den Context Menu Switcher.
            
            ## üì¶ Paket-Inhalt:
            - ‚úÖ **Context-Menu-Switcher.ps1** - Haupt-PowerShell-Skript
            - ‚úÖ **ReadMe.md** - Detaillierte Dokumentation und Anleitung
            - ‚úÖ **en-us.json** - Englische Sprachdatei
            - ‚úÖ **release.zip** - Vorkompilierte Version (falls vorhanden)
            
            ## üöÄ Installation:
            1. ZIP-Datei herunterladen
            2. In gew√ºnschten Ordner extrahieren
            3. PowerShell als Administrator √∂ffnen
            4. Skript ausf√ºhren: `.\Context-Menu-Switcher.ps1`
            
            ## ‚ö†Ô∏è Systemanforderungen:
            - Windows 10/11
            - PowerShell 5.1 oder h√∂her
            - Administrator-Berechtigung erforderlich
            
            ## üîÑ Changelog:
            - Automatisch generiert am ${{ github.event.head_commit.timestamp }}
            - Commit: ${{ github.sha }}
            
            ---
            *Dieses Release wurde automatisch durch GitHub Actions erstellt.*
          
          # RELEASE-EINSTELLUNGEN
          files: context-menu-switcher-release.zip    # Die ZIP-Datei als Download-Asset
          draft: false          # false = Release wird sofort ver√∂ffentlicht
          prerelease: false     # false = Normales Release (nicht als Beta markiert)
          
          # FEHLERBEHANDLUNG
          fail_on_unmatched_files: true    # Workflow schl√§gt fehl, wenn ZIP-Datei nicht existiert
          
        # AUTHENTIFIZIERUNG
        # GitHub Actions verwendet automatisch den GITHUB_TOKEN f√ºr Authentifizierung
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # SCHRITT 4: Erfolg best√§tigen (Optional, aber hilfreich f√ºr Debugging)
      - name: Release-Erstellung best√§tigen
        run: |
          echo "üéâ Context Menu Switcher Release erfolgreich erstellt!"
          echo "üìä Release-Info:"
          echo "   - Tag: ${{ github.ref_name }}"
          echo "   - Repository: ${{ github.repository }}"
          echo "   - Commit: ${{ github.sha }}"
          echo "   - Erstellt am: $(date)"
          echo ""
          echo "üåê Release verf√ºgbar unter:"
          echo "   https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
