# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

# =============================================================================
# ENHANCED GITHUB ACTIONS WORKFLOW FOR CONTEXT MENU SWITCHER RELEASES
# =============================================================================
# This file defines an automated workflow that can be triggered in two ways:
# 1. Automatically when a tag starting with "cms-" is created (e.g. cms-v1.0.1)
# 2. Manually through the GitHub Actions interface with custom parameters

name: Context Menu Switcher Release

# TRIGGER CONFIGURATION - MULTIPLE TRIGGERS SUPPORTED
# Defines when this workflow should be executed
on:
  # AUTOMATIC TRIGGER: Tag-based execution
  push:
    tags:
      - 'cms-*'  # Workflow starts only for tags beginning with "cms-"
                 # Examples: cms-v1.0.1, cms-v2.0.0, cms-beta-1

  # MANUAL TRIGGER: Allows running workflow from GitHub Actions interface
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., cms-v1.00.02)'
        required: true
        default: 'cms-v1.00.01'
        type: string
      create_tag:
        description: 'Create the tag if it does not exist'
        required: true
        default: true
        type: boolean
      release_notes:
        description: 'Additional release notes (optional)'
        required: false
        default: ''
        type: string

# PERMISSIONS
# GitHub Actions requires explicit permission to create releases and tags
permissions:
  contents: write    # Allows creating and editing repository contents
  actions: write     # Allows workflow management

# JOB DEFINITION
# A workflow can contain multiple jobs, here we have only one
jobs:
  release:
    runs-on: ubuntu-latest    # The workflow runs on an Ubuntu Linux server
    
    # CONDITIONAL EXECUTION
    # Execute for cms-tagged pushes OR manual dispatch
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/cms-')) ||
      github.event_name == 'workflow_dispatch'
    
    # WORKFLOW STEPS
    # Each step is executed sequentially
    steps:
      # STEP 1: Download repository code
      # GitHub Actions runs on a fresh server and needs access to your code
      - name: Checkout repository
        uses: actions/checkout@v4    # Official GitHub Action for code download
        # After this step, all your repository files are available

      # STEP 2: Setup variables for different trigger types
      # Handle both automatic (tag push) and manual (workflow_dispatch) triggers
      - name: Setup release variables
        id: setup
        run: |
          # Determine tag name based on trigger type
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Manual trigger - use user input
            TAG_NAME="${{ github.event.inputs.tag_name }}"
            echo "üîß Manual trigger detected"
            echo "üìù Using tag: $TAG_NAME"
          else
            # Automatic trigger - use pushed tag
            TAG_NAME="${{ github.ref_name }}"
            echo "üè∑Ô∏è Automatic tag trigger detected"
            echo "üìù Using tag: $TAG_NAME"
          fi
          
          # Validate tag format
          if [[ ! $TAG_NAME =~ ^cms-.*$ ]]; then
            echo "‚ùå Error: Tag name must start with 'cms-'"
            echo "‚ùå Provided: $TAG_NAME"
            exit 1
          fi
          
          # Export variables for later steps
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "‚úÖ Tag validation successful: $TAG_NAME"

      # STEP 3: Create tag if manual trigger and tag doesn't exist
      # This step only runs for manual triggers when create_tag is enabled
      - name: Create tag if manual trigger
        if: |
          github.event_name == 'workflow_dispatch' && 
          github.event.inputs.create_tag == 'true'
        run: |
          TAG_NAME="${{ steps.setup.outputs.tag_name }}"
          
          # Configure Git with GitHub Actions bot identity
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          
          # Check if tag already exists
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Tag $TAG_NAME already exists"
            echo "‚ÑπÔ∏è Continuing with existing tag..."
          else
            # Create and push new tag
            echo "üè∑Ô∏è Creating new tag: $TAG_NAME"
            git tag "$TAG_NAME"
            git push origin "$TAG_NAME"
            echo "‚úÖ Tag created and pushed successfully"
          fi

      # STEP 4: Create release package
      # Only the Context Menu Switcher folder is packed into a ZIP package
      - name: Create Context Menu Switcher release package
        run: |
          # Debug output - displayed in the Actions log
          echo "üöÄ Starting release package creation for Context Menu Switcher"
          
          # Create temporary folder for the release
          mkdir -p release-temp/Context-Menu-Switcher
          echo "üìÅ Temporary release folder created"
          
          # Verify source folder exists
          if [ ! -d "Context Menu Switcher" ]; then
            echo "‚ùå Error: 'Context Menu Switcher' folder not found!"
            echo "üìÇ Available folders:"
            ls -la
            exit 1
          fi
          
          # IMPORTANT: Copy all files from the Context Menu Switcher folder
          # Folder name contains spaces, therefore quotes are necessary
          cp -r "Context Menu Switcher"/* release-temp/Context-Menu-Switcher/
          echo "üìã Context Menu Switcher files copied:"
          ls -la "Context Menu Switcher"/
          
          # Change to temporary folder
          cd release-temp
          
          # Create ZIP file with all Context Menu Switcher files
          # -r = recursive (include all subdirectories)
          zip -r ../context-menu-switcher-release.zip Context-Menu-Switcher/
          
          # Return to root directory
          cd ..
          
          # Confirmation and display ZIP file size
          echo "‚úÖ ZIP file created:"
          ls -lh context-menu-switcher-release.zip
          
          # Verify ZIP file contents
          echo "üì¶ ZIP file contents:"
          unzip -l context-menu-switcher-release.zip

      # STEP 5: Create GitHub release with enhanced descriptions
      # This is the most important step - the actual release is created here
      - name: Create GitHub release with assets
        uses: softprops/action-gh-release@v1    # Proven third-party action for releases
        with:
          # DYNAMIC TAG NAME handling for both trigger types
          tag_name: ${{ steps.setup.outputs.tag_name }}
          
          # RELEASE TITLE
          # Uses the tag name (e.g. "Context Menu Switcher cms-v1.0.1")
          name: Context Menu Switcher ${{ steps.setup.outputs.tag_name }}
          
          # ENHANCED RELEASE DESCRIPTION (Markdown format supported)
          body: |
            # üéØ Context Menu Switcher Release ${{ steps.setup.outputs.tag_name }}
            
            ## ‚¨áÔ∏è **DOWNLOAD INFORMATION:** 
            DOWNLOAD THE FOLLOWING FILE
            **üìÅ `context-menu-switcher-release.zip`**
            
            ‚ö†Ô∏è **IGNORE the following files:**
            - ‚ùå Source code (zip) 
            - ‚ùå Source code (tar.gz)
            
            THE SOURCE CODE ARCHIVES ARE EMPTY AND THEREFORE USELESS!
            
            ---
            
            This release contains **exclusively** the files for the Context Menu Switcher.
            
            ## üì¶ Package Contents:
            - ‚úÖ **Context-Menu-Switcher.ps1** - Main PowerShell script
            - ‚úÖ **ReadMe.md** - Detailed documentation and instructions
            - ‚úÖ **en-us.json** - English language file
            
            ---
            
            ## üöÄ Installation & Usage:
            1. Download the `context-menu-switcher-release.zip` file above
            2. Extract to your desired folder
            3. Open PowerShell as Administrator
            4. Navigate to the extracted folder
            5. Run script: `.\Context-Menu-Switcher.ps1`
            
            ---
            
            ## üí° Usage Examples:

            #### Activate Classic Context Menu
            ```powershell
            .\Context-Menu-Switcher.ps1 -PopupMenu classic
            ```

            #### Activate Windows 11 Context Menu
            ```powershell
            .\Context-Menu-Switcher.ps1 -PopupMenu new
            ```
            
            ---
            
            ## ‚ö†Ô∏è System Requirements:
            - Windows 10/11
            - PowerShell 5.1 or higher
            - Administrator privileges required
            
            ---
            
            ## üîß Trigger Information:
            - **Trigger Type:** ${{ github.event_name == 'workflow_dispatch' && 'Manual' || 'Automatic (Tag Push)' }}
            - **Generated:** ${{ github.event.head_commit.timestamp || 'Manual trigger' }}
            - **Commit:** ${{ github.sha }}
            
            ${{ github.event.inputs.release_notes != '' && format('## üìù Additional Notes:\n{0}', github.event.inputs.release_notes) || '' }}
            
            ---
            *This release was automatically created by GitHub Actions.*
          
          # RELEASE SETTINGS
          files: context-menu-switcher-release.zip    # The ZIP file as download asset
          draft: false          # false = Release is published immediately
          prerelease: false     # false = Normal release (not marked as beta)
          
          # ERROR HANDLING
          fail_on_unmatched_files: true    # Workflow fails if ZIP file doesn't exist
          
        # AUTHENTICATION
        # GitHub Actions automatically uses GITHUB_TOKEN for authentication
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # STEP 6: Confirm success with enhanced logging
      # Optional, but helpful for debugging and monitoring
      - name: Confirm release creation and provide usage instructions
        run: |
          TAG_NAME="${{ steps.setup.outputs.tag_name }}"
          TRIGGER_TYPE="${{ github.event_name }}"
          
          echo "üéâ Context Menu Switcher release successfully created!"
          echo ""
          echo "üìä Release Information:"
          echo "   üè∑Ô∏è  Tag: $TAG_NAME"
          echo "   üîÑ  Trigger: $TRIGGER_TYPE"
          echo "   üìÅ  Repository: ${{ github.repository }}"
          echo "   üîó  Commit: ${{ github.sha }}"
          echo "   ‚è∞  Created: $(date '+%Y-%m-%d %H:%M:%S UTC')"
          echo ""
          echo "üåê Release Links:"
          echo "   üìñ  Release Page: https://github.com/${{ github.repository }}/releases/tag/$TAG_NAME"
          echo "   üíæ  Direct Download: https://github.com/${{ github.repository }}/releases/download/$TAG_NAME/context-menu-switcher-release.zip"
          echo ""
          echo "üöÄ Next Steps for Users:"
          echo "   1. Visit the release page above"
          echo "   2. Download 'context-menu-switcher-release.zip'"
          echo "   3. Ignore the 'Source code' files"
          echo "   4. Extract and run as Administrator"
          echo ""
          echo "üîß For Developers:"
          if [ "$TRIGGER_TYPE" = "workflow_dispatch" ]; then
            echo "   ‚Ä¢ This release was created manually via GitHub Actions"
            echo "   ‚Ä¢ To create another release, go to Actions ‚Üí Context Menu Switcher Release ‚Üí Run workflow"
          else
            echo "   ‚Ä¢ This release was created automatically by pushing tag: $TAG_NAME"
            echo "   ‚Ä¢ To create another release, push a new cms-* tag or use manual trigger"
          fi
          echo "   ‚Ä¢ Manual trigger available at: https://github.com/${{ github.repository }}/actions/workflows/context-menu-switcher-release.yml"